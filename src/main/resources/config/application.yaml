################################################################################
###                     Dependency configuration                             ###
################################################################################
spring:
  application:
    name: swagger-aggregator

  cloud:
    kubernetes:
      # When enabled (by default) beans KubernetesDiscoveryProperties KubernetesClientServicesFunction 
      # and DefaultIsServicePortSecureResolver are created. 
      # Enabled by default
      enabled: true
      # Kubernetes discovery client. It comes with spring-cloud-starter-kubernetes.
      discovery:
        # When enabled KubernetesDiscoveryClient is created
        # Disabled so that id does not interfere with "KubernetesServiceDiscoveryClient"
        # - next section.
        # Enabled by default
        enabled: false

      # Custom directives from here down
      service:
        # Kubernetes service discovery client.
        # Discovery client providing methods to retrie Kubernetes services as if 
        # they were service instances in context of Spring cloud discovery.
        # It is implemented in this application.
        discovery:
          # When enabled KubernetesServiceDiscoveryClient is created
          # Enabled by default
          enabled: true

# Display application name in Actuator's info endpoint 
info.app.name: ${spring.application.name}

management:
  # To change which endpoints are exposed, use 
  # management.endpoints.web.exposure.include and  
  # management.endpoints.web.exposure.exclude properties.
  endpoints:
    web:
      exposure:
        # Expose all actuator endpoints
        include: '*'

################################################################################
###                      Custom directives                                   ###
################################################################################
aggregator:
  # Path to local reverse proxy controller
  # Default value: `/api-docs/proxy`
  proxyPath: /api-docs/proxy

  # ApiDocs enpoint configuration.
  endpoint:
    #   Default path to Swagger API documentation in JSON format. It sets
    # default value to `swagger.io/apidocs/path` service annotation i.e.:
    # aggregator defaults to this value when endpoint path is not in a service
    # metadata.
    #   On client side it is configured by `springfox.documentation.swagger.v2.path`
    # and defaults to `/v2/api-docs`.
    #   Default value: `/v2/api-docs`
    defaultPath: /v2/api-docs

    # Annotation prefix used to configure ApiDocs endpoint for polling.
    # Default value: `swagger.io/apidocs`
    annotationPrefix: swagger.io/apidocs

    #   Actual ApiDocs service endpoint can be configured via the following
    # annotations, assumming `swagger.io/apidocs` annotation prefix:
    #
    # * `swagger.io/apidocs.poll`: Poll services that have a value of `true`.
    # Default `false`.
    # * `swagger.io/apidocs.scheme`: By default scheme from service URI.
    # * `swagger.io/apidocs.host`: Service URI host by default. Set this
    # appropriately if ApiDocs is exposed on a different host to the service
    # URI. It is usefull when a service is exposed via an ingress controller.
    # * `swagger.io/apidocs.port`: Service URI port by default. Set this
    # appropriately if ApiDocs is exposed on a different port to the service
    # URI.
    # * `swagger.io/apidocs.path`: `/v2/api-docs` by default.
    # * `swagger.io/apidocs.version`: Swagger version. `2.0` by default.

################################################################################
###                       Logging configuration                              ###
################################################################################
logging.level: INFO
logging.level.org.springframework: INFO
logging.level.org.springframework.cloud: DEBUG
logging.level.springfox: WARN
logging.level.org.apache: WARN
logging.level.org.apache.tomcat: INFO
logging.level.org.thymeleaf: INFO
logging.level.net.michalfoksa: TRACE
